{"ast":null,"code":"import axios from 'axios';\nimport { setAlert } from './alert';\nimport { GET_PROFILE, PROFILE_ERROR, DELETE_ACCOUNT, UPDATE_PROFILE } from './types'; // get current user account\n\nexport const getCurrentUser = () => async dispatch => {\n  try {\n    const res = await axios.get('/user/me');\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // update account\n\nexport const updateProfile = (formData, history) => async dispatch => {\n  try {\n    const options = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const res = await axios.post('/user', formData, options);\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert('Profile updated!', 'success'));\n    history.push('/dashboard');\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // delete account \n\nexport const deleteAccount = () => async dispatch => {\n  if (window.confirm('Are your sure?')) try {\n    await axios.delete('/user');\n    dispatch({\n      type: DELETE_ACCOUNT\n    });\n    dispatch(setAlert('Account has been removed', 'danger'));\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};","map":{"version":3,"sources":["/Users/karolinaobcowska/Desktop/Praca inzÌ‡ynierska/frontend/src/actions/user.js"],"names":["axios","setAlert","GET_PROFILE","PROFILE_ERROR","DELETE_ACCOUNT","UPDATE_PROFILE","getCurrentUser","dispatch","res","get","type","payload","data","err","msg","response","statusText","status","updateProfile","formData","history","options","headers","post","push","errors","forEach","error","deleteAccount","window","confirm","delete"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,SAAzB;AACA,SAASC,WAAT,EAAsBC,aAAtB,EAAqCC,cAArC,EAAqDC,cAArD,QAA2E,SAA3E,C,CAEA;;AACA,OAAO,MAAMC,cAAc,GAAG,MAAM,MAAMC,QAAN,IAAkB;AAClD,MAAI;AACA,UAAMC,GAAG,GAAG,MAAMR,KAAK,CAACS,GAAN,CAAU,UAAV,CAAlB;AACAF,IAAAA,QAAQ,CAAC;AACLG,MAAAA,IAAI,EAAER,WADD;AAELS,MAAAA,OAAO,EAAEH,GAAG,CAACI;AAFR,KAAD,CAAR;AAIH,GAND,CAME,OAAOC,GAAP,EAAY;AACVN,IAAAA,QAAQ,CAAC;AACLG,MAAAA,IAAI,EAAEP,aADD;AAELQ,MAAAA,OAAO,EAAE;AAAEG,QAAAA,GAAG,EAAED,GAAG,CAACE,QAAJ,CAAaC,UAApB;AAAgCC,QAAAA,MAAM,EAAEJ,GAAG,CAACE,QAAJ,CAAaE;AAArD;AAFJ,KAAD,CAAR;AAIH;AACJ,CAbM,C,CAeP;;AACA,OAAO,MAAMC,aAAa,GAAG,CAACC,QAAD,EAAWC,OAAX,KAAwB,MAAMb,QAAN,IAAkB;AACnE,MAAI;AACA,UAAMc,OAAO,GAAI;AACbC,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX;AADI,KAAjB;AAKA,UAAMd,GAAG,GAAG,MAAMR,KAAK,CAACuB,IAAN,CAAW,OAAX,EAAoBJ,QAApB,EAA8BE,OAA9B,CAAlB;AACAd,IAAAA,QAAQ,CAAC;AACLG,MAAAA,IAAI,EAAER,WADD;AAELS,MAAAA,OAAO,EAAEH,GAAG,CAACI;AAFR,KAAD,CAAR;AAIAL,IAAAA,QAAQ,CAACN,QAAQ,CAAC,kBAAD,EAAqB,SAArB,CAAT,CAAR;AACAmB,IAAAA,OAAO,CAACI,IAAR,CAAa,YAAb;AACH,GAbD,CAaE,OAAOX,GAAP,EAAY;AACV,UAAMY,MAAM,GAAGZ,GAAG,CAACE,QAAJ,CAAaH,IAAb,CAAkBa,MAAjC;;AACA,QAAIA,MAAJ,EAAY;AACRA,MAAAA,MAAM,CAACC,OAAP,CAAeC,KAAK,IAChBpB,QAAQ,CAACN,QAAQ,CAAC0B,KAAK,CAACb,GAAP,EAAY,QAAZ,CAAT,CADZ;AAEH;;AACDP,IAAAA,QAAQ,CAAC;AACLG,MAAAA,IAAI,EAAEP,aADD;AAELQ,MAAAA,OAAO,EAAE;AAAEG,QAAAA,GAAG,EAAED,GAAG,CAACE,QAAJ,CAAaC,UAApB;AAAgCC,QAAAA,MAAM,EAAEJ,GAAG,CAACE,QAAJ,CAAaE;AAArD;AAFJ,KAAD,CAAR;AAIH;AACJ,CAzBM,C,CA4BP;;AACA,OAAO,MAAMW,aAAa,GAAG,MAAM,MAAMrB,QAAN,IAAkB;AACjD,MAAIsB,MAAM,CAACC,OAAP,CAAe,gBAAf,CAAJ,EACA,IAAI;AACA,UAAM9B,KAAK,CAAC+B,MAAN,CAAa,OAAb,CAAN;AACAxB,IAAAA,QAAQ,CAAC;AAAEG,MAAAA,IAAI,EAAEN;AAAR,KAAD,CAAR;AACAG,IAAAA,QAAQ,CAACN,QAAQ,CAAC,0BAAD,EAA6B,QAA7B,CAAT,CAAR;AACH,GAJD,CAIE,OAAOY,GAAP,EAAY;AACVN,IAAAA,QAAQ,CAAC;AACLG,MAAAA,IAAI,EAAEP,aADD;AAELQ,MAAAA,OAAO,EAAE;AAAEG,QAAAA,GAAG,EAAED,GAAG,CAACE,QAAJ,CAAaC,UAApB;AAAgCC,QAAAA,MAAM,EAAEJ,GAAG,CAACE,QAAJ,CAAaE;AAArD;AAFJ,KAAD,CAAR;AAIH;AACJ,CAZM","sourcesContent":["import axios from 'axios';\nimport { setAlert } from './alert';\nimport { GET_PROFILE, PROFILE_ERROR, DELETE_ACCOUNT, UPDATE_PROFILE } from './types';\n\n// get current user account\nexport const getCurrentUser = () => async dispatch => {\n    try {\n        const res = await axios.get('/user/me');\n        dispatch({\n            type: GET_PROFILE,\n            payload: res.data\n        });\n    } catch (err) {\n        dispatch({\n            type: PROFILE_ERROR,\n            payload: { msg: err.response.statusText, status: err.response.status }\n        })\n    }\n}\n\n// update account\nexport const updateProfile = (formData, history ) => async dispatch => {\n    try {\n        const options =  {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        };\n        const res = await axios.post('/user', formData, options);\n        dispatch({\n            type: GET_PROFILE,\n            payload: res.data\n        });\n        dispatch(setAlert('Profile updated!', 'success'))\n        history.push('/dashboard')\n    } catch (err) {\n        const errors = err.response.data.errors;\n        if (errors) {\n            errors.forEach(error => \n                dispatch(setAlert(error.msg, 'danger')));\n        }\n        dispatch({\n            type: PROFILE_ERROR,\n            payload: { msg: err.response.statusText, status: err.response.status }\n        });\n    }\n}\n\n\n// delete account \nexport const deleteAccount = () => async dispatch => {\n    if (window.confirm('Are your sure?'))\n    try {\n        await axios.delete('/user');\n        dispatch({ type: DELETE_ACCOUNT });\n        dispatch(setAlert('Account has been removed', 'danger'))\n    } catch (err) {\n        dispatch({\n            type: PROFILE_ERROR,\n            payload: { msg: err.response.statusText, status: err.response.status }\n        })\n    }\n}"]},"metadata":{},"sourceType":"module"}