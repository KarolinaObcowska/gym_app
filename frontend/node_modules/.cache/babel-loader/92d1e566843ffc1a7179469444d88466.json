{"ast":null,"code":"var _jsxFileName = \"/Users/karolinaobcowska/Desktop/Praca inz\\u0307ynierska/frontend/src/Components/Dashboard/Dashboard.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport DashboardActions from './DashboardActions';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport User from '../User/User';\nimport Spinner from '../Layout/Spinner';\nimport { getCurrentUser, deleteAccount } from '../../actions/user';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Dashboard = ({\n  deleteAccount,\n  getCurrentUser,\n  auth: {\n    user\n  },\n  user: {\n    loading\n  }\n}) => {\n  _s();\n\n  useEffect(() => {\n    getCurrentUser();\n  }, [getCurrentUser]);\n  return loading && user === null ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 36\n  }, this) : /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"large text-primary\",\n      children: \"Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"lead\",\n      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fas fa-user\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, this), \"Welcome \", user && user.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this), user !== null ? /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(DashboardActions, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(UserGoalCard, {\n        goalCard: user.goalCard\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(User, {\n        user: user\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"btn btn-danger\",\n        onClick: () => deleteAccount(),\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-user-minus\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 21\n        }, this), \" Delete My Account\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \" You have not yet setup your account, pleace add some information\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/edit-account\",\n        className: \"btn btn-primary my-1\",\n        children: \"Update account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Dashboard, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Dashboard;\nDashboard.propTypes = {\n  getCurrentUser: PropTypes.func.isRequired,\n  deleteAccount: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  user: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  user: state.user\n});\n\nexport default connect(mapStateToProps, {\n  getCurrentUser,\n  deleteAccount\n})(Dashboard);\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["/Users/karolinaobcowska/Desktop/Praca inzÌ‡ynierska/frontend/src/Components/Dashboard/Dashboard.js"],"names":["React","Fragment","useEffect","Link","DashboardActions","connect","PropTypes","User","Spinner","getCurrentUser","deleteAccount","Dashboard","auth","user","loading","name","goalCard","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,IAAP,MAAiB,cAAjB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAASC,cAAT,EAAyBC,aAAzB,QAA8C,oBAA9C;;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAAED,EAAAA,aAAF;AAAiBD,EAAAA,cAAjB;AAAiCG,EAAAA,IAAI,EAAE;AAAEC,IAAAA;AAAF,GAAvC;AAAiDA,EAAAA,IAAI,EAAE;AAAEC,IAAAA;AAAF;AAAvD,CAAD,KAA0E;AAAA;;AACxFZ,EAAAA,SAAS,CAAC,MAAM;AACZO,IAAAA,cAAc;AACjB,GAFQ,EAEN,CAACA,cAAD,CAFM,CAAT;AAGA,SACIK,OAAO,IAAID,IAAI,KAAK,IAApB,gBAA2B,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,UAA3B,gBACA,QAAC,QAAD;AAAA,4BACI;AAAI,MAAA,SAAS,EAAC,oBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAG,MAAA,SAAS,EAAC,MAAb;AAAA,8BACI;AAAG,QAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,cADJ,cAEcA,IAAI,IAAIA,IAAI,CAACE,IAF3B;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,EAMMF,IAAI,KAAK,IAAT,gBACF,QAAC,QAAD;AAAA,8BACI,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,YAAD;AAAc,QAAA,QAAQ,EAAEA,IAAI,CAACG;AAA7B;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI,QAAC,IAAD;AAAM,QAAA,IAAI,EAAEH;AAAZ;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAgC,QAAA,OAAO,EAAE,MAAMH,aAAa,EAA5D;AAAA,gCACI;AAAG,UAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,gBADJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADE,gBASF,QAAC,QAAD;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,IAAD;AAAM,QAAA,EAAE,EAAC,eAAT;AAAyB,QAAA,SAAS,EAAC,sBAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAfJ;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ;AAyBH,CA7BD;;GAAMC,S;;KAAAA,S;AA+BNA,SAAS,CAACM,SAAV,GAAsB;AAClBR,EAAAA,cAAc,EAAEH,SAAS,CAACY,IAAV,CAAeC,UADb;AAElBT,EAAAA,aAAa,EAAEJ,SAAS,CAACY,IAAV,CAAeC,UAFZ;AAGlBP,EAAAA,IAAI,EAAEN,SAAS,CAACc,MAAV,CAAiBD,UAHL;AAIlBN,EAAAA,IAAI,EAAEP,SAAS,CAACc,MAAV,CAAiBD;AAJL,CAAtB;;AAOA,MAAME,eAAe,GAAGC,KAAK,KAAK;AAC9BV,EAAAA,IAAI,EAAEU,KAAK,CAACV,IADkB;AAE9BC,EAAAA,IAAI,EAAES,KAAK,CAACT;AAFkB,CAAL,CAA7B;;AAKA,eAAeR,OAAO,CAACgB,eAAD,EAAkB;AAAEZ,EAAAA,cAAF;AAAkBC,EAAAA;AAAlB,CAAlB,CAAP,CAA4DC,SAA5D,CAAf","sourcesContent":["import React, { Fragment, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport DashboardActions from './DashboardActions';\nimport { connect } from 'react-redux'; \nimport PropTypes from 'prop-types';\nimport User from '../User/User'\nimport Spinner from '../Layout/Spinner'\nimport { getCurrentUser, deleteAccount } from '../../actions/user';\n\nconst Dashboard = ({ deleteAccount, getCurrentUser, auth: { user }, user: { loading } }) => {\n    useEffect(() => {\n        getCurrentUser();\n    }, [getCurrentUser])\n    return (\n        loading && user === null ? <Spinner /> :\n        <Fragment>\n            <h1 className='large text-primary'>Dashboard</h1>\n            <p className='lead'>\n                <i className='fas fa-user'></i>\n                Welcome { user && user.name }\n            </p>\n            { user !== null ? \n            <Fragment>\n                <DashboardActions />\n                <UserGoalCard goalCard={user.goalCard} />\n                <User user={user} />\n                <div className='btn btn-danger' onClick={() => deleteAccount()}>\n                    <i className='fas fa-user-minus'></i> Delete My Account\n                </div>\n            </Fragment> :\n            <Fragment>\n                <p> You have not yet setup your account, pleace add some information</p>\n                <Link to='/edit-account' className='btn btn-primary my-1'>\n                    Update account\n                </Link>\n            </Fragment> }\n        </Fragment>\n    )\n}\n\nDashboard.propTypes = {\n    getCurrentUser: PropTypes.func.isRequired,\n    deleteAccount: PropTypes.func.isRequired,\n    auth: PropTypes.object.isRequired,\n    user: PropTypes.object.isRequired,\n}\n\nconst mapStateToProps = state => ({\n    auth: state.auth,\n    user: state.user\n});\n\nexport default connect(mapStateToProps, { getCurrentUser, deleteAccount })(Dashboard);\n"]},"metadata":{},"sourceType":"module"}