{"ast":null,"code":"import axios from 'axios';\nimport { setAlert } from './alert';\nimport { CREATE_TRAINING, GET_TRAININGS, GET_TRAINING, UPDATE_TRAINING, DELETE_TRAINING, TRAINING_ERROR, ADD_EXERCISE, DELETE_EXERCISE } from '../actions/types'; // get trainings \n\nexport const getTrainings = () => async dispatch => {\n  try {\n    const res = await axios.get('/training');\n    dispatch({\n      type: GET_TRAININGS,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: TRAINING_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // get training \n\nexport const getTraining = id => async dispatch => {\n  try {\n    const res = await axios.get(`/training/${id}`);\n    dispatch({\n      type: GET_TRAINING,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: TRAINING_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // create training \n\nexport const createTraining = formData => async dispatch => {\n  const options = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n\n  try {\n    const res = await axios.post('/training', formData, options);\n    dispatch({\n      type: CREATE_TRAINING,\n      payload: res.data\n    });\n    dispatch(setAlert('Training created!', 'success'));\n  } catch (err) {\n    dispatch({\n      type: TRAINING_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // update training\n\nexport const updateTraining = (id, formData) => async dispatch => {\n  const options = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n\n  try {\n    const res = await axios.put(`/training/${id}`, formData, options);\n    dispatch({\n      type: UPDATE_TRAINING,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: TRAINING_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // delete training\n\nexport const deleteTraining = id => async dispatch => {\n  try {\n    await axios.delete(`/training/${id}`);\n    dispatch({\n      type: DELETE_TRAINING,\n      payload: id\n    });\n    dispatch(setAlert('Training removed!', 'success'));\n  } catch (err) {\n    dispatch({\n      type: TRAINING_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // add exercise \n\nexport const addExercise = (trainingId, formData, history) => async dispatch => {\n  const options = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n\n  try {\n    const res = await axios.post(`/training/exercise/${trainingId}`, formData, options);\n    dispatch({\n      type: ADD_EXERCISE,\n      payload: res.data\n    });\n    dispatch(setAlert('Exercise added!', 'success'));\n    history.push(`/trainings`);\n  } catch (err) {\n    dispatch({\n      type: TRAINING_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // delete exercise\n\nexport const deleteExercise = (trainingId, exerciseId) => async dispatch => {\n  try {\n    await axios.delete(`/training/exercise/${trainingId}/${exerciseId}`);\n    dispatch({\n      type: DELETE_EXERCISE,\n      payload: exerciseId\n    });\n  } catch (err) {\n    dispatch({\n      type: TRAINING_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};","map":{"version":3,"sources":["/Users/karolinaobcowska/Desktop/gym-app/frontend/src/actions/training.js"],"names":["axios","setAlert","CREATE_TRAINING","GET_TRAININGS","GET_TRAINING","UPDATE_TRAINING","DELETE_TRAINING","TRAINING_ERROR","ADD_EXERCISE","DELETE_EXERCISE","getTrainings","dispatch","res","get","type","payload","data","err","msg","response","statusText","status","getTraining","id","createTraining","formData","options","headers","post","updateTraining","put","deleteTraining","delete","addExercise","trainingId","history","push","deleteExercise","exerciseId"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport { setAlert } from './alert';\n\nimport { \n    CREATE_TRAINING,\n    GET_TRAININGS,\n    GET_TRAINING,\n    UPDATE_TRAINING,\n    DELETE_TRAINING,\n    TRAINING_ERROR,\n    ADD_EXERCISE,\n    DELETE_EXERCISE,\n} from '../actions/types';\n\n// get trainings \n\nexport const getTrainings = () => async dispatch => {\n    try {\n        const res = await axios.get('/training');\n        dispatch({\n            type: GET_TRAININGS,\n            payload: res.data\n        })\n    } catch (err) {\n        dispatch({\n            type: TRAINING_ERROR,\n            payload: { msg: err.response.statusText, status: err.response.status }\n        });\n    }\n};\n\n// get training \nexport const getTraining = (id) => async dispatch => {\n    try {\n        const res = await axios.get(`/training/${id}`);\n        dispatch({\n            type: GET_TRAINING,\n            payload: res.data\n        })\n    } catch (err) {\n        dispatch({\n            type: TRAINING_ERROR,\n            payload: { msg: err.response.statusText, status: err.response.status }\n        });\n    }\n};\n\n// create training \nexport const createTraining = (formData) => async dispatch => {\n    const options = {\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    }\n    try {\n        const res = await axios.post('/training', formData, options);\n        dispatch({\n            type: CREATE_TRAINING,\n            payload: res.data\n        })\n        dispatch(setAlert('Training created!', 'success'))\n    } catch (err) {\n        dispatch({\n            type: TRAINING_ERROR,\n            payload: { msg: err.response.statusText, status: err.response.status }\n        });\n    }\n}\n\n// update training\nexport const updateTraining = (id, formData) => async dispatch => {\n    const options = {\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    }\n    try {\n        const res = await axios.put(`/training/${id}`, formData, options);\n        dispatch({\n            type: UPDATE_TRAINING,\n            payload: res.data\n        })\n    } catch (err) {\n        dispatch({\n            type: TRAINING_ERROR,\n            payload: { msg: err.response.statusText, status: err.response.status }\n        });\n    }\n}\n\n// delete training\nexport const deleteTraining = (id) => async dispatch => {\n    try {\n        await axios.delete(`/training/${id}`);\n        dispatch({\n            type: DELETE_TRAINING,\n            payload: id\n        });\n        dispatch(setAlert('Training removed!', 'success'))\n    } catch (err) {\n        dispatch({\n            type: TRAINING_ERROR,\n            payload: { msg: err.response.statusText, status: err.response.status }\n        });\n    }\n};\n\n// add exercise \nexport const addExercise = (trainingId, formData, history) => async dispatch => {\n    const options = {\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    }\n    try {\n        const res = await axios.post(`/training/exercise/${trainingId}`, formData, options);\n        dispatch({\n            type: ADD_EXERCISE,\n            payload: res.data\n        })\n        dispatch(setAlert('Exercise added!', 'success'))\n        history.push(`/trainings`)\n    } catch (err) {\n        dispatch({\n            type: TRAINING_ERROR,\n            payload: { msg: err.response.statusText, status: err.response.status }\n        });\n    }\n}\n\n// delete exercise\nexport const deleteExercise = (trainingId, exerciseId) => async dispatch => {\n    try {\n        await axios.delete(`/training/exercise/${trainingId}/${exerciseId}`);\n        dispatch({\n            type: DELETE_EXERCISE,\n            payload: exerciseId,\n        })\n    } catch (err) {\n        dispatch({\n            type: TRAINING_ERROR,\n            payload: { msg: err.response.statusText, status: err.response.status }\n        });\n    }\n};\n\n"]},"metadata":{},"sourceType":"module"}